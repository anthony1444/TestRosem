{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MarketplaceApiService {\n  constructor(http) {\n    this.http = http;\n    this.marketplaceApUrl = '';\n  }\n  getOffers(page, pageSize) {\n    return this.http.get('http://localhost:5000/offer');\n  }\n  postOffer() {\n    // TODO: implement the logic to post a new offer, also validate whatever you consider before posting\n    return of('');\n  }\n  getCategories() {\n    // TODO: implement the logic to retrieve the categories from the service\n    return of([]);\n  }\n  static #_ = this.ɵfac = function MarketplaceApiService_Factory(t) {\n    return new (t || MarketplaceApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarketplaceApiService,\n    factory: MarketplaceApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","MarketplaceApiService","constructor","http","marketplaceApUrl","getOffers","page","pageSize","get","postOffer","getCategories","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Datos\\Desktop\\Github\\marketplace-master\\WebApp\\marketplace\\src\\app\\core\\marketplace-api\\marketplace-api.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {OfferModel} from './models/offer.model';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketplaceApiService {\n\n  private readonly marketplaceApUrl = '';\n\n  constructor(public http:HttpClient) { }\n\n  getOffers(page: number, pageSize: number): Observable<OfferModel[]> {\n    return this.http.get<OfferModel[]>('http://localhost:5000/offer')\n  }\n\n  postOffer(): Observable<string> {\n    // TODO: implement the logic to post a new offer, also validate whatever you consider before posting\n    return of('');\n  }\n\n  getCategories(): Observable<string[]> {\n    // TODO: implement the logic to retrieve the categories from the service\n    return of([]);\n  }\n}\n"],"mappings":"AACA,SAAoBA,EAAE,QAAO,MAAM;;;AAQnC,OAAM,MAAOC,qBAAqB;EAIhCC,YAAmBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFN,KAAAC,gBAAgB,GAAG,EAAE;EAEA;EAEtCC,SAASA,CAACC,IAAY,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAe,6BAA6B,CAAC;EACnE;EAEAC,SAASA,CAAA;IACP;IACA,OAAOT,EAAE,CAAC,EAAE,CAAC;EACf;EAEAU,aAAaA,CAAA;IACX;IACA,OAAOV,EAAE,CAAC,EAAE,CAAC;EACf;EAAC,QAAAW,CAAA,G;qBAlBUV,qBAAqB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBf,qBAAqB;IAAAgB,OAAA,EAArBhB,qBAAqB,CAAAiB,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}